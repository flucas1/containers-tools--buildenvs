name: Weekly Docker Build and Push

on:
  schedule:
    # Run at 08:08 AM every Monday (you can adjust the time/day as needed)
    - cron: '8 8 * * MON'
  workflow_dispatch: # allows manual triggering of the workflow

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository buildenvs
        uses: actions/checkout@v4
        with:
          repository: flucas1/containers-tools--buildenvs
          path: containers-tools/buildenvs

      - name: Checkout repository helpers
        uses: actions/checkout@v4
        with:
          repository: flucas1/containers-tools--helpers
          path: containers-tools/helpers

      - name: Validating situation
        run: sh -c "set -x && pwd && ls -lA && ls -lA containers-tools && ls -lA containers-tools/buildenvs && ls -lA containers-tools/helpers"

      - name: Set up bootstrap environment
        run: |
          echo -e 'FROM debian:testing\nRUN --mount=type=bind,source=containers-tools/buildenvs,target=/data sh -c "set -x && ls -lA /data && sh /data/bootstrap.sh"' > bootstrap.dockerfile && \
          DOCKER_BUILDKIT=1 docker build --tag bootstrap-image --file bootstrap.dockerfile .

      - name: Build and publish container image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: |
          docker run --privileged --rm -v "${GITHUB_WORKSPACE}:/data" bootstrap-image \
          env -i DOCKER_USERNAME="$DOCKER_USERNAME" DOCKER_TOKEN="$DOCKER_TOKEN" sh -c "
            cd /data &&
            mkdir -p /data/containers-tools/helperscache &&
            mkdir -p /data/containers-tools/mscorefonts &&
            mkdir -p /data/containers-tools/winecache/gecko &&
            mkdir -p /data/containers-tools/winecache/mono &&
            mkdir -p /data/containers-tools/winetricks/vcrun2008 &&
            mkdir -p /data/containers-tools/winetricks/vcrun2019 &&
            mkdir -p /data/containers-tools/winetricks/vb6run &&
            mkdir -p /data/containers-tools/winetricks/dotnet20sp2 &&
            mkdir -p /data/containers-tools/winetricks/dotnet35sp1 &&
            mkdir -p /data/containers-tools/winetricks/dotnet40 &&
            mkdir -p /data/containers-tools/winetricks/dotnet452 &&
            mkdir -p /data/containers-tools/winetricks/dotnet462 &&
            mkdir -p /data/containers-tools/winetricks/dotnet472 &&
            mkdir -p /data/containers-tools/winetricks/dotnet48 &&
            mkdir -p /data/containers-tools/winetricks/powershell10 &&
            mkdir -p /data/containers-tools/winetricks/powershell20 &&
            mkdir -p /data/containers-tools/pythoncache &&
            buildah bud --pull --layers=false --isolation=chroot --network=host --pid=host --security-opt label=disable \
              --file /data/containers-tools/buildenvs/buildenvwine.dockerfile --tag buildenvwine:latest --build-context containers-tools=./containers-tools \
              --build-arg APTCACHER= \
              --build-arg WINEGRAPE=devel \
              --build-arg WINEVERSION= \
              --build-arg DEBIANBASE=testing --build-arg CUSTOMREPOSITORY_IDENTIFIER= --build-arg CUSTOMREPOSITORY_SERVER= \
              --build-arg CUSTOMREPOSITORY_PATH=/repository/ --build-arg DIRECTINSTALL=yes --build-arg INSTALL_MSCOREFONTS= --build-arg INSTALL_PIP= \
              --build-arg INSTALL_MSBUILDTOOLS= --build-arg INSTALL_VBRUN= --build-arg INSTALL_DOTNETCORE=yes --build-arg INSTALL_DOTNETFRAMEWORK= \
              --build-arg INSTALL_POWERSHELL=yes --build-arg INSTALL_MSYS2= --build-arg INSTALL_DOTNETEXTRAS=yes --build-arg INSTALL_VCRUN= \
              --build-arg INSTALL_PYTHON3=yes --build-arg INSTALL_DOTNETDUMMYAPP=yes --build-arg INSTALL_WINDOWSPOWERSHELL= \
              . &&
            echo "${DOCKER_TOKEN}" | buildah login --username "${DOCKER_USERNAME}" --password-stdin docker.io &&
            buildah tag buildenvwine:latest docker.io/vaspian/buildenvwine:latest &&
            buildah push docker.io/vaspian/buildenvwine:latest
          "
